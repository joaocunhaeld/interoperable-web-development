{"name":"Interoperable-web-development","tagline":"Hands on lab about interoperable web development","body":"# Interoperabilidade no  Desenvolvimento Web #\r\n\r\nNestes minicursos práticos, você verá como trabalhar com as últimas tendências, práticas e tecnologias para desenvolvimento Web. Tudo isso levando-se conta o desenvolvimento para todos os browsers e vendo como lidar com as limitações dos navegadores web.\r\n\r\nOs minicursos estão divididos em etapas:\r\n\r\n### Etapa 1 - Antes de Começar ###\r\n\r\n#### [Configurando o ambiente de desenvolvimento](https://github.com/joaocunhaeld/interoperable-web-development/tree/master/_setup)\r\nVeja os pré-requisitos e passos para configurar o ambiente de desenvolvimento Web no seu computador. Depois disso você estará apto a executar os demais minicursos presentes neste material.\r\n\r\n#### [Minicurso 1 – Analisando seu site localmente](https://github.com/joaocunhaeld/interoperable-web-development/tree/master/sitescan)\r\nNeste minicurso iremos analisar uma aplicação existente usando a ferramenta de Site scan localmente. \r\n\r\n### Etapa 2 - Desenvolvendo para Web Moderna ###\r\n\r\n#### [Minicurso 2 – Corrigindo problema no Modo de Renderização e também lidando com funções obsoletas](https://github.com/joaocunhaeld/interoperable-web-development/tree/master/rendermode)\r\nNeste minicurso iremos corrigir problema do modo de renderização do site, detectado no minicurso anterior. Vamos também corrigir alguns problemas do Javascript para deixar o site aderente à Web Moderna.\r\n\r\n#### [Minicurso 3 – Usando detecção de features ao invés de detecção de browser](https://github.com/joaocunhaeld/interoperable-web-development/tree/master/feature-detection) \r\nNeste minicurso iremos rever a forma como controlamos o uso de recursos do browser, substituindo a detecção de browser por detecção de features.\r\n\r\n#### [Minicurso 4 – Usando corretamente prefixos CSS](https://github.com/joaocunhaeld/interoperable-web-development/tree/master/css-prefix) \r\nNeste minicurso iremos analisar alguns problemas encontrados no site relacionados com Prefixos CSS. Para corrigir nosso CSS, iremos usar uma ferramenta que inclui os prefixos automaticamente.\r\n\r\n#### [Minicurso 5 – Manipulando diferentes entradas do usuário](https://github.com/joaocunhaeld/interoperable-web-development/tree/master/touch) \r\nNeste minicurso iremos atualizar nossa aplicação exemplo para considerar entrada do usuário usando touch. Será incluído o uso do [hand.js](https://handjs.codeplex.com/), mostrando como podemos usá-lo para melhorar o desenvolvimento do site.\r\n\r\n### Etapa 3 - Mobile-First ###\r\n\r\n#### [Minicurso 6 - Mobile First com Design Responsivo - Visualizando seu site em todos os dispositivos](https://github.com/joaocunhaeld/interoperable-web-development/tree/master/mobile-first-design)\r\nNeste minicurso iremos continuar aperfeiçoando nossa aplicação. Neste caso iremos adicionar o recurso web Design Responsivo através de Media Queries e outros elementos que podem ajudar a prover uma melhor experiência para o usuário em qualquer dispositivo que ele esteja utilizando.\r\n\r\n### Etapa 4 - Garantindo que o seu site funciona ###\r\n\r\n#### [Minicurso 7 – Testando seu site em diferentes Browsers](https://github.com/joaocunhaeld/interoperable-web-development/tree/master/testing)\r\nNeste minicurso veremos algumas ferramentas que podem ser usadas para testar nosso site e garantir que ele funciona em diferentes browsers: [Remote IE](https://remote.modern.ie/) e [Browser Stack](http://www.browserstack.com/). \r\n\r\n#### [Minicurso 8 – Atualizando seu site para suportar versões anteriores do Internet Explorer](https://github.com/joaocunhaeld/interoperable-web-development/tree/master/update)\r\nNeste minicurso iremos ver como deixar nosso site atualizado para Web Moderna mas ao mesmo tempo fazer com que ele funcione em versões anteriores do Internet Explorer.\r\n\r\n","google":"UA-67404613-1","note":"Don't delete this file! It's used internally to help with page regeneration."}